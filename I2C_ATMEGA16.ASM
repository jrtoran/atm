;                PROTOCOLO I2C INTERNO DEL AT MEGA 16
		; ------------------LOS PINES SCL Y SDA SE HAN DE CONFIGURAR COMO SALIDA -------------------------
		; RUTINA PARA LA LECTURA DEL CONVERTIDOR ANALOGICO DIGITAL PCF8591
		; EN R17 DIRECCION DEL PERIFERICO
		; EN R18 LINEA DE ENTRADA A LEER Y CONFIGURACION DEL PERIFERICO
		; EN R26 NUMERO DE LECTURAS MAX. 250
		; EN R24 EL RESULTADO O EL VALOR A GRABAR

ERROR_1:
	RET

PCF:
	CLR				R1
	CLR				R24
	CLR				YH				; PONE A CERO LA PARTE ALTA DEL REGISTRO Y
	LSL				R17
I2C_ATMEGA:
; INICIALIZACION DEL PERIFERICO A 100KHZ
	LDI				R16,2
	LDI				YL,TWBR
	ST				Y,R16
	LDI				R16,(1<<TWPS1) | (1<<TWPS0)
	LDI				YL,TWSR
	ST				Y,R16
; CONDICION DE START
	LDI				R16,(1<<TWINT)|(1<<TWSTA)|(1<<TWEN)
	LDI				YL,TWCR
	ST				Y,R16
ESPERA1: ; ESPERA EL ENVIO DE LA CONDICION START
	LDI				YL,TWCR
	LD				R16,Y
	SBRS			R16,TWINT
	RJMP			ESPERA1
; CHEQUEAR SI HA HABIDO ERROR EN EL ENVIO DE LA ORDEN START
	LDI				YL,TWSR
	LD				R16,Y
;	ANDI			R16,0xF8
;	CPI				R16,I2C_START
;	BRNE			ERROR_1	;  ****AQUI HAY UN ESCESO DE SALTO SE PONE UN RET DIRECTO
; CARGA EN TWDR LA DIRECION DEL PERIFERICO A LEER EN OPCION ESCRITURA W
	LDI				R16,PCF8591 + W
	ADD				R16,R17							
	LDI				YL,TWDR
	ST				Y,R16
	LDI				R16,(1<<TWINT) | (1<<TWEN)
	LDI				YL,TWCR
	ST				Y,R16
; ESPERA EL ENVIO DE LA DIRECION DEL PERIFERICO
ESPERA2:
	LDI				YL,TWCR
	LD				R16,Y
	SBRS			R16,TWINT
	RJMP			ESPERA2
; CHEQUEAR SI HA HABIDO ERROR EN EL ENVIO DE LA DIRECION DEL PERIFERICO
	LDI				YL,TWSR
	LD				R16,Y
;	ANDI			R16,0xF8
;	CPI				R16,MT_SLA_ACK
;	BRNE			ERROR
; CARGA EL DATO EN EL REGISTRO TWDR EL VALOR DEL PUERTO A LEER EN R24 
	MOV				R16,R18
	LDI				YL,TWDR
	ST				Y,R16
	LDI				R16,(1<<TWINT) | (1<<TWEN)
	LDI				YL,TWCR
	ST				Y,R16
; ESPERA EL ENVIO DEL DATO AL PERIFERICO
ESPERA3:
	LDI				YL,TWCR
	LD				R16,Y
	SBRS			R16,TWINT
	RJMP			ESPERA3
; CHEQUEA EL VALOR DEL REGISTRO POR SI HUBIERA ERROR
	LDI				YL,TWSR
	LD				R16,Y
;	ANDI			R16,0xF8
;	CPI				R16,MT_DATA_ACK
;	BRNE			ERROR
; TRANSMITIR SEÑAL DE STOP
	LDI				R16,(1<<TWINT)|(1<<TWEN)|(1<<TWSTO)
	LDI				YL,TWCR
	ST				Y,R16
	NOP
	NOP
I2C_ATMEGA_1:  ;  LEER EL DATO DE TENSION EN LA ENTRADA SELECIONADA
; INICIALIZACION A 400KhZ
	LDI				R16,2
	LDI				YL,TWBR
	ST				Y,R16
	LDI				R16,(1<<TWPS1) | (1<<TWPS0)
	LDI				YL,TWSR
	ST				Y,R16
; CONDICION DE START
	LDI				R16,(1<<TWINT)|(1<<TWSTA)|(1<<TWEN)
	LDI				YL,TWCR
	ST				Y,R16
ESPERA4: ; ESPERA EL ENVIO DE LA CONDICION START *** RE_START
	LDI				YL,TWCR
	LD				R16,Y
	SBRS			R16,TWINT
	RJMP			ESPERA4
; CHEQUEAR SI HA HABIDO ERROR EN EL ENVIO DE LA ORDEN START
	LDI				YL,TWSR
	LD				R16,Y
;	ANDI			R16,0xF8
;	CPI				R16,REP_START
;	BRNE			ERROR	
; CARGA EN TWDR LA DIRECION DEL PERIFERICO A LEER EN OPCION LECTURA
	LDI				R16,PCF8591 + R
	ADD				R16, R17		
	LDI				YL,TWDR
	ST				Y,R16
	LDI				R16,(1<<TWINT) | (1<<TWEN)
	LDI				YL,TWCR
	ST				Y,R16
;	OUT				TWCR,R16
; ESPERA EL ENVIO DE LA DIRECION DEL PERIFERICO
ESPERA5:
	LDI				YL,TWCR
	LD				R16,Y
	SBRS			R16,TWINT
	RJMP			ESPERA5
; CHEQUEAR SI HA HABIDO ERROR EN EL ENVIO DE LA DIRECION DEL PERIFERICO
	LDI				YL,TWSR
	LD				R16,Y
;	ANDI			R16,0xF8
;	CPI				R16,MR_SLA_ACK
;	BRNE			ERROR
;RECIBIR EL DATO

	LDI				R16,(1<<TWINT) | (1<<TWEN)
	LDI				YL,TWCR
	ST				Y,R16
; ESPERA EL ENVIO DEL VALOR 
ESPERA6:
	LDI				YL,TWCR
	LD				R16,Y
	SBRS			R16,TWINT
	RJMP			ESPERA6
; CHEQUEAR SI HA HABIDO ERROR
	LDI				YL,TWSR
	LD				R16,Y
;	ANDI			R16,0xF8
;	CPI				R16,MR_DATA_NACK
;	BRNE			ERROR
	LDI				YL,TWDR
	LD				R19,Y
; TRANSMITIR SEÑAL DE STOP
	LDI				R16,(1<<TWINT)|(1<<TWEN)|(1<<TWSTO)
	LDI				YL,TWCR
	ST				Y,R16
	DEC				R26				; RESTA UNA MEDICION
	BREQ			I2C_ATMEGA_2	; SI A LLEGADO A CERO SALTA A PCF2 Y TERMINA
	ADC				R1, R19
	BRCC			I2C_ATMEGA_1	; SI NO HAY DESBIRDAMIENTO SALTA A PCF1
	INC				R24
	WDR
	RJMP			I2C_ATMEGA_1
I2C_ATMEGA_2:
	RET
ERROR:
	RET

