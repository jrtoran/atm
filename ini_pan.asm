; *********INICIALIZAR PANTALLA //////////////

INI_PANTALLA:
	LDI   R24, 100
TEM1:						; NECESITA 15mS DE RETRASO DESPUES DE CONECTAR
	LDI   R25, 250			; CICLO DE 250 us A 4Mhz x 100 = 0,025 seg
	RCALL RETARDO
	DEC   R24
	BRNE  TEM1
	LDI   R16, 48			; 00110000 se debe enviar tres veces (1)
	RCALL ENVINTR
	LDI   R24, 23			; retardo de 4,1 ms ( 23x250=5.750 ms )
TEM2:	
	LDI   R25, 250
	RCALL RETARDO
	DEC   R24
	BRNE  TEM2
	LDI   R16, 48			; 00110000 se debe enviar tres veces (1)
	RCALL ENVINTR
	LDI   R25, 120			; retardo 100us
	RCALL RETARDO
	LDI   R16, 48			; 00110000 se debe enviar tres veces (1)
	RCALL ENVINTR
	LDI   R25, 120
	RCALL RETARDO
	LDI   R16,56			; 00111000 8 BITS 2LINEAS, DIGITO DE 5X7
	RCALL ENVINTR	
	LDI   R25, 250
	RCALL RETARDO
	LDI   R16, 0b00001100	; ENCIENDE LA PANTALLA 1CDB
	RCALL ENVINTR			; C CURSOR ON/OFF
	LDI   R25, 250			; D PONE UNA MARCA DONDE ESTA EL CURSOR
	RCALL RETARDO			; B intermitente
	LDI   R16, 06			; MODO SET ,TRABAJO
	RCALL ENVINTR
	RCALL CGRAM
	RET
INI_PANTALLA1:
	CALL			PAR_MOD_DIS
	CALL			AJUSTE_PRESENTACION_4
	LDI				R16,32				; PONE UN ESPACIO
	STS				$7DE,R16
	STS				$7DF,R16
	STS				$7F0,R16
	STS				$7F1,R16
	STS				$7F2,R16
	STS				$7F3,R16
	STS				$804,R16
	STS				$805,R16
	LDI   R16, 192			; escribir en linea uno 128 linea 2 192
	RCALL ENVINTR
	LDI   YH, HIGH (LIN1P)
	LDI   YL, LOW  (LIN1P)-2
	LDI   R17,20
	RCALL ENVIARTEXTO
	LDI   R16, 148			; 11000000 escribir en linea 2 linea (192) en linea 3
	RCALL ENVINTR
	LDI   YH, HIGH (LIN2P)	; POSICION ALTA DEL TAXTO EN RAM
	LDI   YL, LOW  (LIN2P)-2	; direccion BAJA DEL TEXTO EN RAM      		
	LDI   R17,20			; numero de digitos a enviar
	RCALL ENVIARTEXTO	
	RETI

;       20x4        16x4   tipo de display
; linea 1-128 		128 
; linea 2-192		192
; linea 3-148		144
; linea 4-212		208

ENVINTR:
	CBI   PORTC, lcd_rs		; en instruccion a 0
	LDI   R25,50			; retardo necesario aprox 42us
	RCALL RETARDO
	SBI   PORTC, lcd_e		; activa enable
	OUT   PORTA,R16   		; ponemos el byte de TEXTO 
	LDI   R25,230      		; retardo total 230 us
	RCALL RETARDO   		; 
	CBI   PORTC,lcd_e   	; STROBE=0 dato valido
	LDI   R25, 200			; 1retardo necesario 270us 
	RCALL RETARDO
	LDI   R25, 200			; 2retardo necesario 195us 
	RCALL RETARDO
	LDI   R25, 200			; 3retardo necesario 195us 
	RCALL RETARDO
	LDI   R25, 200			; 4retardo necesario 195us 
	RCALL RETARDO
	LDI   R25, 200			; 5retardo necesario 270us son 190 faltan 80
	RCALL RETARDO			; llamada a la rutina retardo   
	LDI   R25, 100			; 6retardo necesario 80us
	RCALL RETARDO			; llamada a la rutina retardo  
	RET
CGRAM:  ;PARA PROGRAMAR UNA ESPACIO EN CGRAM

	LDI R16, 0B01000000		; ACCESO A CGRAM POSICION DE MEMORIA 00
	RCALL ENVINTR
	LDI	R16, 0B00000000
	RCALL ENVIARBYTE
	LDI	R16, 0B00000000
	RCALL ENVIARBYTE
	LDI	R16, 0B00000000
	RCALL ENVIARBYTE
	LDI	R16, 0B00000000
	RCALL ENVIARBYTE
	LDI	R16, 0B00000000
	RCALL ENVIARBYTE
	LDI	R16, 0B00000000
	RCALL ENVIARBYTE
	LDI	R16, 0B00000000
	RCALL ENVIARBYTE
	LDI	R16, 0B00000000
	RCALL ENVIARBYTE
; PROGRAMAR FLECHA ARRIBA

	LDI	R16, 0B00000100
	RCALL ENVIARBYTE
	LDI	R16, 0B00001110
	RCALL ENVIARBYTE
	LDI	R16, 0B00010101
	RCALL ENVIARBYTE
	LDI	R16, 0B00000100
	RCALL ENVIARBYTE
	LDI	R16, 0B00000100
	RCALL ENVIARBYTE
	LDI	R16, 0B00000100
	RCALL ENVIARBYTE
	LDI	R16, 0B00000100
	RCALL ENVIARBYTE
	LDI	R16, 0B00000000
	RCALL ENVIARBYTE

; PROGRAMAR FLECHA ABAJO

	LDI	R16, 0B00000100
	RCALL ENVIARBYTE
	LDI	R16, 0B00000100
	RCALL ENVIARBYTE
	LDI	R16, 0B00000100
	RCALL ENVIARBYTE
	LDI	R16, 0B00000100
	RCALL ENVIARBYTE
	LDI	R16, 0B00010101
	RCALL ENVIARBYTE
	LDI	R16, 0B00001110
	RCALL ENVIARBYTE
	LDI	R16, 0B00000100
	RCALL ENVIARBYTE
	LDI	R16, 0B00000000
	RCALL ENVIARBYTE

; PROGRAMA UN A  g MINUSCULA
	
	LDI	R16, 0B00000000
	RCALL ENVIARBYTE
	LDI	R16, 0B00000000
	RCALL ENVIARBYTE
	LDI	R16, 0B00001110
	RCALL ENVIARBYTE
	LDI	R16, 0B00010001
	RCALL ENVIARBYTE
	LDI	R16, 0B00001111
	RCALL ENVIARBYTE
	LDI	R16, 0B00000001
	RCALL ENVIARBYTE
	LDI	R16, 0B00001111
	RCALL ENVIARBYTE
	LDI	R16, 0B00000000
	RCALL ENVIARBYTE

; PONE UNA Ñ
	LDI	R16, 0B00011111
	RCALL ENVIARBYTE
	LDI	R16, 0B00000000
	RCALL ENVIARBYTE
	LDI	R16, 0B00010001
	RCALL ENVIARBYTE
	LDI	R16, 0B00011001
	RCALL ENVIARBYTE
	LDI	R16, 0B00010101
	RCALL ENVIARBYTE
	LDI	R16, 0B00010011
	RCALL ENVIARBYTE
	LDI	R16, 0B00010001
	RCALL ENVIARBYTE
	LDI	R16, 0B00000000
	RCALL ENVIARBYTE
RET

			;***+CREO QUE ESTO SOBRA*************
; LIMPIA LA LINEA  2 DE PRESENTACION PARA QUE NO APAREZCA UNA Ñ
    LDI   			YH,0x01        	; direcion alta donde se pone el texto en RAM VALOR ANTIGUO 00
    LDI   			YL,0x10      	; direccion baja donde se pone el texto en RAM VALOR ANTIGUO EC
    LDI   			ZH,high(TEXTO6*2); direccion alta del TEXTO en Flash
    LDI   			ZL,low(TEXTO6*2) ; direccion baja del TEXTO en Flash 
    LDI   			R16,16      	; longitud de texto a copiar en RAM
;*** RURINA CARGAR TEXTO DE FLASH A RAM  
;EN Y (YH,YL) POSICION EN RAM
;EN Z (ZH,ZL) POSICION EN FLASH
;EN R16 NUMERO DE LETRAS (BYTS)

CARGATEXTO_5A:
	LPM      						; leemos TEXTO de FLASH y lo almacena en R0
	ADIW  			ZL,1   			; apuntamos al siguiente elemento 
	ST    			Y, R0			; guardamos en RAM POSICION Y EL CONTENIDO DE R0
	ADIW  			YL,1      		
	DEC   			R16      		; Hemos terminado..?? 
	BRNE  			CARGATEXTO_5A  	; NO...seguimos cargando 
	RET
